from command_specification import * 
from rcp_core.gen_type import * 

####
#files
####
cBaseFileName = 'cmd_impl'
outPutCHeader = open(cBaseFileName+'.h','w')

###
#build main func
###

outPutCHeader.write("//This file was generated by program.\n")
outPutCHeader.write('#include "def/rcp_context.h"\n')
outPutCHeader.write('#include "def/rcp_connection.h"\n')
outPutCHeader.write('#include "def/rcp_record.h"\n')
outPutCHeader.write('#include "def/rcp_type.h"\n')

template = """
void cmd_impl_{func_name}(
		rcp_context_ref ctx,
		rcp_connection_ref con,
		rcp_record_ref cmd_rec,
		rcp_type_ref cmd_type,
		void* cmd);
"""


fragment = ""
for info in commandList:
	command_name= re.findall(r'[A-Z]*[a-z]+',info['name'])
	command_name= '_'.join(command_name).lower()
	outPutCHeader.write(template.format(
			func_name = command_name
			))

